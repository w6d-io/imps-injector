---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: imagepullsecretinjectors.secret.w6d.io
spec:
  group: secret.w6d.io
  names:
    kind: ImagePullSecretInjector
    listKind: ImagePullSecretInjectorList
    plural: imagepullsecretinjectors
    singular: imagepullsecretinjector
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ImagePullSecretInjector is the Schema for the imagepullsecretinjectors
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ImagePullSecretInjectorSpec defines the desired state of
              ImagePullSecretInjector
            properties:
              annotationSelector:
                description: AnnotationSelector filter the annotation where to update
                  service account at least on of selector should be present
                items:
                  description: ServiceAccountSelector represents the AND of the selectors
                    represented by the scoped-resource selector terms.
                  properties:
                    key:
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are In and NotIn. Defaults to In.
                      type: string
                    value:
                      description: Values An array of string values. If the operator
                        is In or NotIn, the values array must be non-empty.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              labelSelector:
                description: LabelSelector filter the annotation where to update service
                  account at least on of selector should be present
                items:
                  description: ServiceAccountSelector represents the AND of the selectors
                    represented by the scoped-resource selector terms.
                  properties:
                    key:
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are In and NotIn. Defaults to In.
                      type: string
                    value:
                      description: Values An array of string values. If the operator
                        is In or NotIn, the values array must be non-empty.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              namespaceAnnotationSelector:
                description: NamespaceAnnotationSelector filter the namespace where
                  the service account is to update
                items:
                  description: ServiceAccountSelector represents the AND of the selectors
                    represented by the scoped-resource selector terms.
                  properties:
                    key:
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are In and NotIn. Defaults to In.
                      type: string
                    value:
                      description: Values An array of string values. If the operator
                        is In or NotIn, the values array must be non-empty.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              namespaceLabelSelector:
                description: NamespaceLabelSelector filter the namespace where the
                  service account is to update
                items:
                  description: ServiceAccountSelector represents the AND of the selectors
                    represented by the scoped-resource selector terms.
                  properties:
                    key:
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are In and NotIn. Defaults to In.
                      type: string
                    value:
                      description: Values An array of string values. If the operator
                        is In or NotIn, the values array must be non-empty.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              namespaces:
                description: NamespaceAnnotationSelector filter the namespace where
                  to update service account
                items:
                  type: string
                type: array
              secrets:
                description: Secrets list to inject into service accounts
                items:
                  description: SecretConfig describes the properties of the secrets
                    created in each selected namespace
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations specifies additional annotations to
                        be put on the Secret object
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels specifies additional labels to be put on
                        the Secret object
                      type: object
                    name:
                      description: Name specifies the name of the secret object
                      type: string
                  required:
                  - name
                  type: object
                type: array
            required:
            - secrets
            type: object
          status:
            description: ImagePullSecretInjectorStatus defines the observed state
              of ImagePullSecretInjector
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of play
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              count:
                description: Count number of service accounts handled
                format: int32
                type: integer
            required:
            - count
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
